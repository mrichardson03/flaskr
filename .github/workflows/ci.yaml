name: "CI"

on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'main'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  IMAGE_TAG: ${{ github.sha }}
  VULNERABILITY_POLICY: "Michael-Richardson-SE-Vulnerabilities"
  SECRETS_POLICY: "Michael-Richardson-SE-Secrets"

jobs:
  test:
    name: Run Python tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install poetry
        run: |
          curl -sSL https://install.python-poetry.org | python - -y

      - name: Install project
        run: poetry install

      - name: Run pre-commit
        uses: pre-commit/action@v3.0.1

      - name: Run pytest
        env:
          FLASK_APP: flaskr
        run: |
          mkdir instance
          poetry run flask init-db
          poetry run pytest

  security-scan:
    name: Run wizcli security scan
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Download wizcli
        run: |
          curl -o wizcli https://wizcli.app.wiz.io/latest/wizcli
          chmod +x wizcli && sudo mv wizcli /usr/bin/
          wizcli version

      - name: Authenticate to Wiz
        run: wizcli auth --id "$WIZ_CLIENT_ID" --secret "$WIZ_CLIENT_SECRET"
        env:
          WIZ_CLIENT_ID: ${{ secrets.WIZ_CLIENT_ID }}
          WIZ_CLIENT_SECRET: ${{ secrets.WIZ_CLIENT_SECRET }}

      - name: Scan code with wizcli
        run: wizcli dir scan --path . --policy "$VULNERABILITY_POLICY"

  docker:
    name: Docker Build/Scan/Push
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Download wizcli
        run: |
          curl -o wizcli https://wizcli.app.wiz.io/latest/wizcli
          chmod +x wizcli && sudo mv wizcli /usr/bin/
          wizcli version

      - name: Authenticate to Wiz
        run: wizcli auth --id "$WIZ_CLIENT_ID" --secret "$WIZ_CLIENT_SECRET"
        env:
          WIZ_CLIENT_ID: ${{ secrets.WIZ_CLIENT_ID }}
          WIZ_CLIENT_SECRET: ${{ secrets.WIZ_CLIENT_SECRET }}

      - name: Build Docker image
        id: build
        uses: docker/build-push-action@v6.7.0
        with:
          context: .
          load: true
          tags: "${{ github.repository}}:${{ github.sha }}"

      - name: Scan Docker image with wizcli
        run: wizcli docker scan --image "$IMAGE_NAME:$IMAGE_TAG" --policy "$VULNERABILITY_POLICY"

      - name: Log in to Container Registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6.7.0
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
